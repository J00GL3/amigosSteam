import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react'
import tratamiento from '@/lib/tratamiento'
import TablaPrueba from '@/lib/TablaPrueba'
import TablaComunes from '@/lib/tablaComunes'
import Cookies from 'js-cookie'
import { parseCookies } from 'nookies'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const { api } = parseCookies();
  const [query, setQuery] = useState([])
  const [results, setResult] = useState([])
  const [apikey, setApikey] = useState(api)
  const [info, setInfo] = useState([]) 
  const [comunes, setComunes] = useState([])
  
  
  //console.log(api)


  async function manejarInformacionTabla(data){
    //console.log(data);

    const infoAmpliada = await fetch('/api/getInfoPlayers', {
      method: 'POST',
      body: JSON.stringify({apikey, jugadores: data}),
      headers: {
        "Content-Type": "application/json"
      }
    })

    const infoComunes = await infoAmpliada.json();

    //console.log(infoComunes);

    setComunes(infoComunes);
  }

  function handleApikey(value) {
    Cookies.set("api", value)
    setApikey(value)
  }

  async function handleSubmit (e) {
    e.preventDefault()

    var jugadores = [];

    const busqueda = query.map( e=> {return {id64:e.steamid64}});

    busqueda.forEach( jugador => {
      jugadores.push(jugador.id64)
    })
    
    const infoplayers = await fetch('/api/getInfoPlayers', {
      method: 'POST',
      body: JSON.stringify({apikey, jugadores: jugadores}),
      headers: {
        "Content-Type": "application/json"
      }
    })

    const infoplayerJson = await infoplayers.json();

    //console.log(infoplayerJson)

    setInfo(infoplayerJson)

    const res = await fetch('/api/friendsList', {
      method: 'POST',
      body: JSON.stringify({apikey, busqueda}),
      headers: {
        "Content-Type": "application/json"
      }
    })
    const data = await res.json();
    //console.log(data)
    setResult(data)
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.center}>
          <div className={styles.input}>
            <h1 className={styles.title}>Buscador de amigos comunes</h1>
            <form onSubmit={handleApikey}>
              <div className={styles.apikey}>
              <h3>Api key 
                {
                  apikey.length == 32 ? (<></>): (<a href="https://steamcommunity.com/dev/apikey" target='_blank' style={{display: "block", color: "blue"}}>Generar api key</a>)
                }
                </h3>
              </div>
        <input
        className={styles.textoInput}
          type="text"
          value={ apikey }
          onChange={e => handleApikey(e.target.value)}
        />
      </form>
        <form onSubmit={handleSubmit}>
          <div className={styles.apikey}>
          <h3>Pegar status consola</h3>
          </div>
        <input
        className={styles.textoInput}
          type="text"
          value={
            query.length > 0 ? (query.length + " Jugadores detectados") : ("")
          }
          onChange={e => setQuery( tratamiento(e.target.value) )}
        />
        <button type="submit" className={styles.buscar}>Buscar</button>
      </form>
      {info.length > 0 ? (<h2 style={{textAlign: "center", margin: "20px 0 5px 0"}}>Tabla de amigos</h2>): (<></>)}
      <div className={styles.tabla}>
        <TablaPrueba info={[info, results]} onData={manejarInformacionTabla} />
        <TablaComunes info={comunes} />
      </div>
      
      </div>
        </div>
      </main>
    </>
  )
}
